worker_processes auto;

events {
  use                 epoll;
  worker_connections  65535;
  epoll_events        512;
}

http {

    # error_log /dev/null;
    # access_log /dev/null;

    sendfile on;

    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    # access_log off;

    # send headers in one piece, it is better than sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    # reduce the data that needs to be sent over network -- for testing environment
    gzip on;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    # request timed out -- default 60
    client_body_timeout 10;

    # if client stop responding, free up memory -- default 60
    send_timeout 2;

    # server will close connection after this time -- default 75
    keepalive_timeout 30;

    # number of requests client can make over keep-alive -- for testing environment
    keepalive_requests 100000;

    upstream app-server {
      server app-server-1:3000;
      server app-server-2:3001;
      server app-server-3:3002;
      server app-server-4:3003;
    }

    server {
        listen 80;

        location /metrics {
            stub_status on;
            # allow 127.0.0.1;
            # deny all;
        }

        location / {
            proxy_pass      http://app-server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
